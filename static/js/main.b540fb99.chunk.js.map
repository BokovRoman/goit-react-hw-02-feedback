{"version":3,"sources":["components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css"],"names":["module","exports","Statistics","stat","good","neutral","bad","total","positivePercentage","className","styles","title","list","FeedbackOptions","onLeaveGoodFeedback","onLeaveNeutralFeedback","onLeaveBadFeedback","button","name","type","onClick","Section","children","text","protoTypes","PropTypes","string","isRequired","Notification","message","App","state","handleGoodIncrement","setState","prevState","handleNeutralIncrement","handleBadIncrement","countTotalFeedback","countPositiveFeedbackPercentage","result","percentage","Math","round","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b540fb99.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Section_text__XzdFk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1nFqt\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({stat, good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <>\r\n            <h2 className={styles.title}>{stat}</h2>\r\n            <ul className={styles.list}>\r\n                <li><p>Good: {good}</p></li>\r\n                <li><p>Neutral: {neutral}</p></li>\r\n                <li><p>Bad: {bad}</p></li>\r\n                <li><p>Total:{total}</p></li>\r\n                <li><p>Positive feedback:{positivePercentage}%</p></li>\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n}\r\n             \r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\n\r\nconst FeedbackOptions= ({ onLeaveGoodFeedback, onLeaveNeutralFeedback, onLeaveBadFeedback }) => {\r\n    return (\r\n        <>\r\n          <button className={styles.button} name=\"Good\" type=\"button\"\r\n                        onClick={onLeaveGoodFeedback}>Good</button>\r\n                    <button className={styles.button} name=\"Neutral\" type=\"button\"\r\n                        onClick={onLeaveNeutralFeedback}>Neutral</button>\r\n                    <button className={styles.button} name=\"Bad\" type=\"button\"\r\n                    onClick={onLeaveBadFeedback}>Bad</button>\r\n        </>\r\n    );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n    onLeaveGoodFeedback: PropTypes.func.isRequired,\r\n    onLeaveNeutralFeedback: PropTypes.func.isRequired,\r\n    onLeaveBadFeedback: PropTypes.func.isRequired,\r\n}\r\n             \r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\n\r\nconst Section= ({ title, children}) => {\r\n    return (\r\n        <>\r\n        <h2 className={styles.text}>{title}</h2>\r\n            {children}\r\n        </>\r\n        \r\n    );\r\n};\r\n\r\nSection.protoTypes = {\r\n    title:PropTypes.string.isRequired,\r\n}\r\n             \r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\n\r\nconst Notification = ({ stat, message }) => {\r\n    return (\r\n        <>\r\n            <h2 className={styles.title}>{stat}</h2>\r\n            <p className={styles.text}>{message}</p>\r\n        </>\r\n    );\r\n};\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification;\r\n","import React, {Component} from 'react';\nimport Statistics from './components/Statistics/Statistics'\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions'\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\n\n\nclass App extends Component{\n\n    // Старый синтаксис\n    // constructor() {\n    //     super();\n\n    //     this.state = {\n    //         good: 0,\n    //         neutral: 0,\n    //         bad: 0,\n    //     }\n    // }\n\n    state = {\n            good: 0,\n            neutral: 0,\n            bad: 0,\n        }\n\n    handleGoodIncrement = () => {\n        this.setState((prevState) => ({\n                good:prevState.good+1,\n\n        }));\n    };\n\n    handleNeutralIncrement = () => {\n        this.setState(prevState => ({\n            neutral:prevState.neutral+1,\n        }));\n    };\n\n    handleBadIncrement = () => {\n        this.setState(prevState => ({\n            bad: prevState.bad+1,\n        }));\n    };\n\n \tcountTotalFeedback = () => {\n\t\tconst { good, neutral, bad } = this.state;\n\t\tconst result = good + neutral + bad;\n\t\treturn result;\n    };\n    \n    countPositiveFeedbackPercentage = () => {\n        const result = this.countTotalFeedback();\n        const percentage = (this.state.good * 100) / result;\n        return Math.round(percentage);\n    };\n\n    render() {\n        return (\n            <div className=\"Statistics\">\n                <section>\n              <Section\n                title=\"Please leave feedback\">\n                  <FeedbackOptions\n                    onLeaveGoodFeedback={ this.handleGoodIncrement}\n                    onLeaveNeutralFeedback={this.handleNeutralIncrement }\n                    onLeaveBadFeedback={this.handleBadIncrement}\n                />\n              </Section>\n                </section>\n                <section>\n              {this.countTotalFeedback() === 0 ? (\n                <Notification\n                  stat=\"Statistics\"\n                  message=\"No feedback given\"\n                />) : (\n                  <Statistics\n                  stat=\"Statistics\"\n                  good={this.state.good}\n                  neutral={this.state.neutral}\n                  bad={this.state.bad}\n                  total={this.countTotalFeedback()}\n                  positivePercentage={this.countPositiveFeedbackPercentage()}\n                />)}\n                </section>\n            </div>\n        );\n    }\n}\n  \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3ICDS\",\"title\":\"Statistics_title__2b5Hw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__1KtAP\",\"title\":\"Notification_title__3oxpc\"};"],"sourceRoot":""}